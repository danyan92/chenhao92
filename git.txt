一、Git安装：
  1、 二进制方式安装：
        $ sudo apt-get install git-core
安装完成后，在终端中输入 git 就可以看到相关的命令了。如果只是需要使用git来管理本地的代码，那么现在就可以
使用了。如果需要和github上的项目结合，还需要做其他的一些操作。

 2、github帐号的申请
        如果只是需要将github上感兴趣的代码拷贝到本地，自己进行修改使用，而不打算共享发布的话，其实不申请
帐号也没有关系，只需要 git clone 代码到本地就可以了。 $ git clone git:// IP work（工作目录名）。毕竟使用
github 就是为了开源的目的，首先去 github.com 上注册一个帐号。

   3、在本地建立一个文件夹，然后做一些全局变量的初始化
        $ git config --global user.name  "用户名或者用户ID"
        $ git config --global user.email  邮箱
        这两个选项会在以后的使用过程中自动添加到代码中。
		.gitconfig 添加以下内容，之后只需输入一次密码   
		[credential]  
			helper = store  

    4、创建验证用的公钥
          这个是比较复杂和困扰大多数人的地方，因为 git 是通过 ssh 的方式访问资源库的，所以需要在本地创建验证
用的文件。使用命令：$ ssh-keygen -C 'you email address@gmail.com' -t rsa会在用户目录 ~/.ssh/ 下建立相应
的密钥文件.可以使用 $ ssh -v git@github.com 命令来测试链接是否畅通。

    5、上传公钥
        在 github.com 的界面中 选择右上角的 Account Settings，然后选择 SSH Public Keys ，选择新加。 Title 可
  以随便命名，Key 的内容拷贝自 ~/.ssh/id_rsa.pub 中的内容，完成后，可以再使用 ssh -v  git@github.com 进行
测试。看到下面的信息表示验证成功。

二、Git配置与使用
       利用 github 来管理自己的项目，可以按照下面的步骤进行
       1、建立仓库

       在需要建立项目的文件夹中，使用 git init 进行仓库的建立。完成后，可以看到文件家中多了一个 .git 隐藏目录。

       2、添加文件

       使用 git add . 来进行初始文件的添加。这里 . 表示将文件夹下所有的文件都添加进去，我们也可以指定文件进

行添 加。

        3、提交文件

   使用 git commit  -m 'comment' 提交，可以将编辑的内容进行提交。

        4、删除或增加github远程来源

    git remote add origin https://github.com/Git-Elite/CodeBase.git //蓝色部分为github托管的仓库地址
         5、提交至github仓库
    git push  origin master
	
	
三.windows中的换行符为 CRLF， 而在Linux下的换行符为LF，所以在执行add . 时出现提示，解决办法：

$ rm -rf .git  // 删除.git  
$ git config --global core.autocrlf false  //禁用自动转换   
$ git init    
$ git add . 
	